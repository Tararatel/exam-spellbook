export default {
  async up(queryInterface, Sequelize) {
    const now = new Date();
    const spells = [
      {
        name: 'Lumos',
        description: 'Создает свет на конце палочки',
        type: 'utility',
        difficulty: 'beginner',
        wand_movement: 'Плавный взмах',
        pronunciation: 'LOO-mos',
        is_canon: true,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'Incendio',
        description: 'Создает огонь',
        type: 'attack',
        difficulty: 'intermediate',
        wand_movement: 'Резкий взмах вниз',
        pronunciation: 'in-SEN-dee-o',
        is_canon: true,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'Protego',
        description: 'Создает защитный барьер',
        type: 'defense',
        difficulty: 'intermediate',
        wand_movement: 'Круговое движение',
        pronunciation: 'pro-TAY-go',
        is_canon: true,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'AquaFlux',
        description: 'Манипулирует водной энергией',
        type: 'utility',
        difficulty: 'beginner',
        wand_movement: 'Волнообразное движение',
        pronunciation: 'AH-qua-flux',
        is_canon: false,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'VentusGale',
        description: 'Создаёт порыв ветра',
        type: 'attack',
        difficulty: 'beginner',
        wand_movement: 'Взмах в сторону',
        pronunciation: 'VEN-tus-gale',
        is_canon: false,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'TerraGuard',
        description: 'Поднимает каменную стену',
        type: 'defense',
        difficulty: 'intermediate',
        wand_movement: 'Удар вниз',
        pronunciation: 'TER-ra-guard',
        is_canon: false,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'CuraVita',
        description: 'Исцеляет раны',
        type: 'healing',
        difficulty: 'intermediate',
        wand_movement: 'Круг и толчок',
        pronunciation: 'KYOO-ra-VEE-ta',
        is_canon: false,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'NoxVeil',
        description: 'Окутывает область тенью',
        type: 'utility',
        difficulty: 'advanced',
        wand_movement: 'Круг с паузой',
        pronunciation: 'nox-veil',
        is_canon: false,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'VoloLev',
        description: 'Поднимает объект в воздух',
        type: 'utility',
        difficulty: 'beginner',
        wand_movement: 'Взмах вверх',
        pronunciation: 'VO-lo-lev',
        is_canon: false,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'Fortify',
        description: 'Усиливает свойства цели',
        type: 'charm',
        difficulty: 'intermediate',
        wand_movement: 'Резкий толчок',
        pronunciation: 'for-TEE-fy',
        is_canon: false,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'Silencio',
        description: 'Создаёт зону тишины',
        type: 'utility',
        difficulty: 'intermediate',
        wand_movement: 'Плавный круг',
        pronunciation: 'sil-EN-tee-oh',
        is_canon: false,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'Maximus',
        description: 'Усиливает мощность заклинания',
        type: 'charm',
        difficulty: 'advanced',
        wand_movement: 'Двойной взмах',
        pronunciation: 'MAX-i-mus',
        is_canon: false,
        createdAt: now,
        updatedAt: now,
      },
      {
        name: 'ElementalBurst',
        description: 'Мощный взрыв элементальной энергии',
        type: 'attack',
        difficulty: 'advanced',
        wand_movement: 'Круг + толчок',
        pronunciation: 'ele-MEN-tal-burst',
        is_canon: false,
        createdAt: now,
        updatedAt: now,
      },
    ];

    const transaction = await queryInterface.sequelize.transaction();
    try {
      await queryInterface.bulkInsert('Spells', spells, { transaction });
      await transaction.commit();
    } catch (error) {
      await transaction.rollback();
      throw error;
    }
  },

  async down(queryInterface, Sequelize) {
    await queryInterface.bulkDelete('Spells', null, {});
  },
};
